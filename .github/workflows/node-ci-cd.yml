name: CI/CD

on:
  workflow_call:

env:
  FORCE_COLOR: 3 # Diplay chalk colors

jobs:
  ci:
    name: Integration
    runs-on: ubuntu-latest
    steps:
      - id: yarn-cache
        name: Get Yarn cache path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: 16.x
      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
        name: Load Yarn cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --ignore-scripts
        name: Install dependencies
      - run: yarn ci
        name: Run integration tests
      - uses: coverallsapp/github-action@9ba913c152ae4be1327bfb9085dc806cedb44057
        name: Report code coverage
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: 47ng/actions-slack-notify@main
        name: Notify on Slack
        if: always()
        with:
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  cd:
    name: Deployment
    runs-on: ubuntu-latest
    needs: [ci]
    if: ${{ github.ref_name == 'main' || github.ref_name == 'beta' }}
    steps:
      - id: yarn-cache
        name: Get Yarn cache path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: 16.x
      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
        name: Load Yarn cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --ignore-scripts
        name: Install dependencies
      - run: yarn build
        name: Build package

      # Continuous Delivery Pipeline --

      - uses: docker://ghcr.io/codfish/semantic-release-action@sha256:16ab6c16b1bff6bebdbcc6cfc07dfafff49d23c6818490500b8edb3babfff29e
        name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
